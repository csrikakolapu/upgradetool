OBJNAME	OBJTYPE	SOURCECODE	LINNO
LZCBPMIDDLEWAREF01	INCL	CONSTANTS: lc_cur_st TYPE bus_ei_object_task VALUE 'C'. "Current State	000033
LZCBPMIDDLEWAREF01	INCL	CONSTANTS: lc_roles_current TYPE char100 VALUE 'lp_bp_extern-CENTRAL_DATA-ROLE-ROLES[]'. "To assign the values to FS	000034
LZCBPMIDDLEWAREF01	INCL	CONSTANTS: lc_roles_extract TYPE char100 VALUE 'ls_bp_new_extern-CENTRAL_DATA-ROLE-ROLES[]'."To assign the values to FS	000035
LZCBPMIDDLEWAREF01	INCL		000036
LZCBPMIDDLEWAREF01	INCL	DATA: l_partner TYPE bu_partner. "Partner	000037
LZCBPMIDDLEWAREF01	INCL	DATA: lit_bp TYPE TABLE OF bapiidlist. "List of BP Guids	000035
LZCBPMIDDLEWAREF01	INCL	DATA: ls_bp TYPE bapiidlist. "BP GUID	000039
LZCBPMIDDLEWAREF01	INCL	DATA: lit_bp_extern TYPE bus_ei_main. "BDoc Structure	000040
LZCBPMIDDLEWAREF01	INCL	DATA: ls_dbroles TYPE but100."DB Roles	000041
LZCBPMIDDLEWAREF01	INCL	DATA: lit_dbroles TYPE TABLE OF but100. "DB Roles	000042
LZCBPMIDDLEWAREF01	INCL	DATA: ls_bp_new_extern TYPE bus_ei_extern. "New BDoc if to be changed	000043
LZCBPMIDDLEWAREF01	INCL	DATA: lp_bp_extern_current_copy TYPE bus_ei_extern. "copy of current BDoc	000044
LZCBPMIDDLEWAREF01	INCL		000045
LZCBPMIDDLEWAREF01	INCL	FIELD-SYMBOLS: <fs_roles_current> TYPE bus_ei_bupa_roles_t. "tables	000046
LZCBPMIDDLEWAREF01	INCL	FIELD-SYMBOLS: <fs_role_current> TYPE bus_ei_bupa_roles. "strcuture	000047
LZCBPMIDDLEWAREF01	INCL	FIELD-SYMBOLS: <fs_roles_extract> TYPE bus_ei_bupa_roles_t. "Strcuture of all DB roles	000048
LZCBPMIDDLEWAREF01	INCL		000049
LZCBPMIDDLEWAREF01	INCL		000050
LZCBPMIDDLEWAREF01	INCL	* when a BP-Person is	000051
LZCBPMIDDLEWAREF01	INCL	* Inserted: It implies, there are Roles addded to the BP, Only Manipulate the Address to add the Address Usage, if provided	000052
LZCBPMIDDLEWAREF01	INCL	* Updated: It implies, if this is First role added to the BP,theres need to be Extract Structure and manipulation of Address .	000053
LZCBPMIDDLEWAREF01	INCL	* OR	000054
LZCBP_EMPINS_OTHTOP	INCL	END OF ty_clink_reason,	000202
LZCBP_EMPINS_OTHTOP	INCL		000203
LZCBP_EMPINS_OTHTOP	INCL	BEGIN OF ty_but000, " BUT000 Table Fields	000204
LZCBP_EMPINS_OTHTOP	INCL	partner TYPE bu_partner, " Businesss Partner	000205
LZCBP_EMPINS_OTHTOP	INCL	END OF ty_but000,	000206
LZCBP_EMPINS_OTHTOP	INCL		000207
LZCBP_EMPINS_OTHTOP	INCL	BEGIN OF ty_but0id, " BUT0ID Table Fields	000208
LZCBP_EMPINS_OTHTOP	INCL	partner TYPE bu_partner, " Business Partner	000209
LZCBP_EMPINS_OTHTOP	INCL	type TYPE bu_id_type, " Identification Type	000210
LZCBP_EMPINS_OTHTOP	INCL	idnumber TYPE bu_id_number, " Identification Number	000211
LZCBP_EMPINS_OTHTOP	INCL	valid_date_to TYPE bu_id_valid_date_to, "Validity End for ID Number	000212
LZCBP_EMPINS_OTHTOP	INCL	END OF ty_but0id,	000213
LZCBP_EMPINS_OTHTOP	INCL		000214
LZCBP_EMPINS_OTHTOP	INCL	BEGIN OF ty_finrsn_flag1,	000215
LZCBP_EMPINS_OTHTOP	INCL	partner TYPE bu_partner,	000216
LZCBP_EMPINS_OTHTOP	INCL	case_guid TYPE scmg_case_guid,	000217
LZCBP_EMPINS_OTHTOP	INCL	reason TYPE zlink_reason_code,	000218
LZCBP_EMPINS_OTHTOP	INCL	END OF ty_finrsn_flag1,	000219
LZCBP_EMPINS_OTHTOP	INCL		000220
LZCBP_EMPINS_OTHTOP	INCL	BEGIN OF ty_finrsn_flag2,	000221
LZCBP_EMPINS_OTHTOP	INCL	case_guid TYPE scmg_case_guid,	000222
LZCCASE_CLEAR_CASEF02	INCL	ls_target type ZCCASE_CLR_TARG.	000076
LZCCASE_CLEAR_CASEF02	INCL		000077
LZCCASE_CLEAR_CASEF02	INCL	* Instance memory: clear case	000078
LZCCASE_CLEAR_CASEF02	INCL	move-corresponding is_clear_case_data to ls_clear_case.	000079
LZCCASE_CLEAR_CASEF02	INCL	move-corresponding iS_instance_KEY to ls_clear_case.	000080
LZCCASE_CLEAR_CASEF02	INCL	append ls_clear_case to gt_clear_case.	000081
LZCCASE_CLEAR_CASEF02	INCL		000082
LZCCASE_CLEAR_CASEF02	INCL	* Instance memory: target list	000083
LZCCASE_CLEAR_CASEF02	INCL	loop at it_target_data into ls_target.	000084
LZCCASE_CLEAR_CASEF02	INCL	if ls_target-guid is initial.	000085
LZCCASE_CLEAR_CASEF02	INCL	CALL FUNCTION 'GUID_CREATE' "#EC DOM_EQUAL	000086
LZCCASE_CLEAR_CASEF02	INCL	IMPORTING	000087
LZCCASE_CLEAR_CASEF02	INCL	EV_GUID_16 = ls_target-guid.	000088
LZCCASE_CLEAR_CASEF02	INCL	endif.	000089
LZCCASE_CLEAR_CASEF02	INCL	ls_target-client = sy-mandt.	000090
LZCCASE_CLEAR_CASEF02	INCL	ls_target-object_class = ls_clear_case-application.	000091
LZCCASE_CLEAR_CASEF02	INCL	append ls_target to gt_targ_list.	000092
LZCCASE_CLEAR_CASEF02	INCL	endloop.	000093
LZCCASE_CLEAR_CASEF02	INCL		000094
LZCCASE_CLEAR_CASEF02	INCL		000095
LZCCASE_CLEAR_CASEF02	INCL	ENDMETHOD. "create_instance	000096
LZCCASE_CLEAR_CASE_READF03	INCL	append ls_target_db to ct_target_list_data.	000066
LZCCASE_CLEAR_CASE_READF03	INCL	endloop.	000067
LZCCASE_CLEAR_CASE_READF03	INCL		000068
LZCCASE_CLEAR_CASE_READF03	INCL	else.	000069
LZCCASE_CLEAR_CASE_READF03	INCL	clear ls_clear_case.	000070
LZCCASE_CLEAR_CASE_READF03	INCL	move-corresponding ls_clear_case_key to ls_clear_case.	000071
LZCCASE_CLEAR_CASE_READF03	INCL	ls_clear_case-not_found = gc_x.	000072
LZCCASE_CLEAR_CASE_READF03	INCL		000073
LZCCASE_CLEAR_CASE_READF03	INCL	* Create a Dummy Guid, because Tabele gt_clear_case has	000074
LZCCASE_CLEAR_CASE_READF03	INCL	* Clinet and Guid as Table Key	000075
LZCCASE_CLEAR_CASE_READF03	INCL	CALL FUNCTION 'GUID_CREATE'	000076
LZCCASE_CLEAR_CASE_READF03	INCL	IMPORTING	000077
LZCCASE_CLEAR_CASE_READF03	INCL	ev_guid_16 = ls_clear_case-guid.	000078
LZCCASE_CLEAR_CASE_READF03	INCL		000079
LZCCASE_CLEAR_CASE_READF03	INCL	INSERT ls_clear_case INTO TABLE gt_clear_case.	000080
LZCCASE_CLEAR_CASE_READF03	INCL		000081
LZCCASE_CLEAR_CASE_READF03	INCL	clear cv_case_found.	000082
LZCCASE_CLEAR_CASE_READF03	INCL	exit.	000083
LZCCASE_CLEAR_CASE_READF03	INCL	endif.	000084
LZCCASE_CLEAR_CASE_READF03	INCL		000085
LZCCASE_CLEAR_CASE_READF03	INCL	else.	000086
LZCCASE_CLEAR_CASE_READF03	INCL	append ls_target_db to ct_target_list_data.	000112
LZCCASE_CLEAR_CASE_READF03	INCL	endloop.	000113
LZCCASE_CLEAR_CASE_READF03	INCL		000114
LZCCASE_CLEAR_CASE_READF03	INCL	else.	000115
LZCCASE_CLEAR_CASE_READF03	INCL	clear ls_clear_case.	000116
LZCCASE_CLEAR_CASE_READF03	INCL	move-corresponding ls_clear_case_key to ls_clear_case.	000117
LZCCASE_CLEAR_CASE_READF03	INCL	ls_clear_case-not_found = gc_x.	000118
LZCCASE_CLEAR_CASE_READF03	INCL		000119
LZCCASE_CLEAR_CASE_READF03	INCL	* Create a Dummy Guid, because Tabele gt_clear_case has	000120
LZCCASE_CLEAR_CASE_READF03	INCL	* Clinet and Guid as Table Key	000121
LZCCASE_CLEAR_CASE_READF03	INCL	CALL FUNCTION 'GUID_CREATE'	000122
LZCCASE_CLEAR_CASE_READF03	INCL	IMPORTING	000123
LZCCASE_CLEAR_CASE_READF03	INCL	ev_guid_16 = ls_clear_case-guid.	000124
LZCCASE_CLEAR_CASE_READF03	INCL		000125
LZCCASE_CLEAR_CASE_READF03	INCL	INSERT ls_clear_case INTO TABLE gt_clear_case.	000126
LZCCASE_CLEAR_CASE_READF03	INCL		000127
LZCCASE_CLEAR_CASE_READF03	INCL	clear cv_case_found.	000128
LZCCASE_CLEAR_CASE_READF03	INCL	exit.	000129
LZCCASE_CLEAR_CASE_READF03	INCL	endif.	000130
LZCCASE_CLEAR_CASE_READF03	INCL		000131
LZCCASE_CLEAR_CASE_READF03	INCL	endif.	000132
LZCCASE_CLEAR_CASE_READF03	INCL	append ls_target_db2 to ct_target_list_data.	000192
LZCCASE_CLEAR_CASE_READF03	INCL	endloop.	000193
LZCCASE_CLEAR_CASE_READF03	INCL		000194
LZCCASE_CLEAR_CASE_READF03	INCL	else.	000195
LZCCASE_CLEAR_CASE_READF03	INCL	clear ls_target.	000196
LZCCASE_CLEAR_CASE_READF03	INCL	move-corresponding is_object_key to ls_target.	000197
LZCCASE_CLEAR_CASE_READF03	INCL	ls_target-not_found = gc_x.	000198
LZCCASE_CLEAR_CASE_READF03	INCL		000199
LZCCASE_CLEAR_CASE_READF03	INCL	* Create a Dummy Guid, because Tabele gt_targ_list has	000200
LZCCASE_CLEAR_CASE_READF03	INCL	* Clinet and Guid as Table Key	000201
LZCCASE_CLEAR_CASE_READF03	INCL	CALL FUNCTION 'GUID_CREATE'	000202
LZCCASE_CLEAR_CASE_READF03	INCL	IMPORTING	000203
LZCCASE_CLEAR_CASE_READF03	INCL	ev_guid_16 = ls_target-guid.	000204
LZCCASE_CLEAR_CASE_READF03	INCL		000205
LZCCASE_CLEAR_CASE_READF03	INCL	INSERT ls_target INTO TABLE gt_targ_list.	000206
LZCCASE_CLEAR_CASE_READF03	INCL	clear cv_case_found.	000207
LZCCASE_CLEAR_CASE_READF03	INCL	exit.	000208
LZCCASE_CLEAR_CASE_READF03	INCL	endif.	000209
LZCCASE_CLEAR_CASE_READF03	INCL	endloop.	000210
LZCCASE_CLEAR_CASE_READF03	INCL		000211
LZCCASE_CLEAR_CASE_READF03	INCL	else.	000212
LZCCASE_CLEAR_CASE_READF03	INCL	clear ls_target.	000213
LZCCASE_CLEAR_CASE_READF03	INCL	move-corresponding is_object_key to ls_target.	000214
LZCCASE_CLEAR_CASE_READF03	INCL	ls_target-not_found = gc_x.	000215
LZCCASE_CLEAR_CASE_READF03	INCL		000216
LZCCASE_CLEAR_CASE_READF03	INCL	* Create a Dummy Guid, because Tabele gt_targ_list has	000217
LZCCASE_CLEAR_CASE_READF03	INCL	* Clinet and Guid as Table Key	000218
LZCCASE_CLEAR_CASE_READF03	INCL	CALL FUNCTION 'GUID_CREATE'	000219
LZCCASE_CLEAR_CASE_READF03	INCL	IMPORTING	000220
LZCCASE_CLEAR_CASE_READF03	INCL	ev_guid_16 = ls_target-guid.	000221
LZCCASE_CLEAR_CASE_READF03	INCL		000222
LZCCASE_CLEAR_CASE_READF03	INCL	INSERT ls_target INTO TABLE gt_targ_list.	000223
LZCCASE_CLEAR_CASE_READF03	INCL	clear cv_case_found.	000224
LZCCASE_CLEAR_CASE_READF03	INCL	exit.	000225
LZCCASE_CLEAR_CASE_READF03	INCL	endif.	000226
LZCCASE_CLEAR_CASE_READF03	INCL		000227
LZCCASE_CLEAR_CASE_READF03	INCL	else.	000228
LZCCASE_CLEAR_CASE_READF03	INCL	*** Select target(s) by application key **************************	000229
LZCCASE_CLEAR_CASE_READF03	INCL	append ls_target_db2 to ct_target_list_data.	000280
LZCCASE_CLEAR_CASE_READF03	INCL	endloop.	000281
LZCCASE_CLEAR_CASE_READF03	INCL		000282
LZCCASE_CLEAR_CASE_READF03	INCL	else.	000283
LZCCASE_CLEAR_CASE_READF03	INCL	clear ls_target.	000284
LZCCASE_CLEAR_CASE_READF03	INCL	move-corresponding is_object_key to ls_target.	000285
LZCCASE_CLEAR_CASE_READF03	INCL	ls_target-not_found = gc_x.	000286
LZCCASE_CLEAR_CASE_READF03	INCL		000287
LZCCASE_CLEAR_CASE_READF03	INCL	* Create a Dummy Guid, because Tabele gt_targ_list has	000288
LZCCASE_CLEAR_CASE_READF03	INCL	* Clinet and Guid as Table Key	000289
LZCCASE_CLEAR_CASE_READF03	INCL	CALL FUNCTION 'GUID_CREATE'	000290
LZCCASE_CLEAR_CASE_READF03	INCL	IMPORTING	000291
LZCCASE_CLEAR_CASE_READF03	INCL	ev_guid_16 = ls_target-guid.	000292
LZCCASE_CLEAR_CASE_READF03	INCL		000293
LZCCASE_CLEAR_CASE_READF03	INCL	INSERT ls_target INTO TABLE gt_targ_list.	000294
LZCCASE_CLEAR_CASE_READF03	INCL	clear cv_case_found.	000295
LZCCASE_CLEAR_CASE_READF03	INCL	exit.	000296
LZCCASE_CLEAR_CASE_READF03	INCL	endif.	000297
LZCCASE_CLEAR_CASE_READF03	INCL	endloop.	000298
LZCCASE_CLEAR_CASE_READF03	INCL		000299
LZCCASE_CLEAR_CASE_READF03	INCL	else.	000300
LZCCASE_CLEAR_CASE_READF03	INCL	clear ls_target.	000301
LZCCASE_CLEAR_CASE_READF03	INCL	move-corresponding is_object_key to ls_target.	000302
LZCCASE_CLEAR_CASE_READF03	INCL	ls_target-not_found = gc_x.	000303
LZCCASE_CLEAR_CASE_READF03	INCL		000304
LZCCASE_CLEAR_CASE_READF03	INCL	* Create a Dummy Guid, because Tabele gt_targ_list has	000305
LZCCASE_CLEAR_CASE_READF03	INCL	* Clinet and Guid as Table Key	000306
LZCCASE_CLEAR_CASE_READF03	INCL	CALL FUNCTION 'GUID_CREATE'	000307
LZCCASE_CLEAR_CASE_READF03	INCL	IMPORTING	000308
LZCCASE_CLEAR_CASE_READF03	INCL	ev_guid_16 = ls_target-guid.	000309
LZCCASE_CLEAR_CASE_READF03	INCL		000310
LZCCASE_CLEAR_CASE_READF03	INCL	INSERT ls_target INTO TABLE gt_targ_list.	000311
LZCCASE_CLEAR_CASE_READF03	INCL	clear cv_case_found.	000312
LZCCASE_CLEAR_CASE_READF03	INCL	exit.	000313
LZCCASE_CLEAR_CASE_READF03	INCL	endif.	000314
LZCCASE_CLEAR_CASE_READF03	INCL		000315
LZCCASE_CLEAR_CASE_READF03	INCL		000316
LZCCASE_CLEAR_CASE_READF03	INCL	endif. "search by object GUID or application key	000317
LZCCASE_CLEAR_FGF01	INCL		000062
LZCCASE_CLEAR_FGF01	INCL	* Build Clear case key	000063
LZCCASE_CLEAR_FGF01	INCL	READ TABLE pt_clear_case_key INDEX lv_current_index INTO	000064
LZCCASE_CLEAR_FGF01	INCL	ls_clear_case_key.	000065
LZCCASE_CLEAR_FGF01	INCL	IF sy-subrc EQ 0.	000066
LZCCASE_CLEAR_FGF01	INCL	lv_current_index = sy-tabix.	000067
LZCCASE_CLEAR_FGF01	INCL	ELSE.	000068
LZCCASE_CLEAR_FGF01	INCL	CLEAR: lv_current_index, ls_clear_case_key.	000069
LZCCASE_CLEAR_FGF01	INCL	ENDIF.	000070
LZCCASE_CLEAR_FGF01	INCL	IF ls_clear_case_key-guid IS INITIAL.	000071
LZCCASE_CLEAR_FGF01	INCL	CALL FUNCTION 'GUID_CREATE' "#EC DOM_EQUAL	000072
LZCCASE_CLEAR_FGF01	INCL	IMPORTING	000073
LZCCASE_CLEAR_FGF01	INCL	ev_guid_16 = ls_clear_case_key-guid.	000074
LZCCASE_CLEAR_FGF01	INCL	ENDIF.	000075
LZCCASE_CLEAR_FGF01	INCL		000076
LZCCASE_CLEAR_FGF01	INCL	IF NOT ls_clearing_case_data-case_number IS INITIAL.	000077
LZCCASE_CLEAR_FGF01	INCL	ls_clear_case_key-orig_number = ls_clearing_case_data-case_number.	000078
LZCCASE_CLEAR_FGF01	INCL	CALL FUNCTION 'NUMBER_GET_NEXT'	000079
LZCCASE_CLEAR_FGF01	INCL	EXPORTING	000080
LZCCASE_CLEAR_FGF01	INCL	nr_range_nr = '01'	000081
LZCCASE_CLEAR_FGF01	INCL	object = 'ZCCLEAR'	000082
LZCCASE_CLEAR_FGF01	INCL	IMPORTING	000376
LZCCASE_CLEAR_FGF01	INCL	output = l_number.	000377
LZCCASE_CLEAR_FGF01	INCL		000378
LZCCASE_CLEAR_FGF01	INCL	LOOP AT pt_targets INTO ls_target_data WHERE case_number = l_number.	000379
LZCCASE_CLEAR_FGF01	INCL	CLEAR gs_target.	000380
LZCCASE_CLEAR_FGF01	INCL	*target table	000381
LZCCASE_CLEAR_FGF01	INCL		000382
LZCCASE_CLEAR_FGF01	INCL	* START-OF-CHANGES : Abhishek S	000383
LZCCASE_CLEAR_FGF01	INCL	* gs_target-guid = ls_clear_case_key-guid. " Comments : Abhishek S	000384
LZCCASE_CLEAR_FGF01	INCL		000385
LZCCASE_CLEAR_FGF01	INCL	CALL FUNCTION 'GUID_CREATE' "#EC DOM_EQUAL	000386
LZCCASE_CLEAR_FGF01	INCL	IMPORTING	000387
LZCCASE_CLEAR_FGF01	INCL	ev_guid_16 = gs_target-guid.	000388
LZCCASE_CLEAR_FGF01	INCL		000389
LZCCASE_CLEAR_FGF01	INCL	* END-OF-CHANGES : Abhishek S	000390
LZCCASE_CLEAR_FGF01	INCL		000391
LZCCASE_CLEAR_FGF01	INCL	* Start - of - Comments : Abhishek S.	000392
LZCCASE_CLEAR_FGF01	INCL	* gs_target-case_number = ls_clear_case_key-case_number.	000393
LZCCASE_CLEAR_FGF01	INCL	* IF gs_target-targ_guid IS INITIAL.	000394
LZCCASE_CLEAR_FGF01	INCL	* CALL FUNCTION 'GUID_CREATE'	000395
LZCCASE_CLEAR_FGF01	INCL	* IMPORTING	000396
LZCCASE_CLEAR_FGF01	INCL		000520
LZCCASE_CLEAR_FGF01	INCL	* Get all the cases for matching case	000521
LZCCASE_CLEAR_FGF01	INCL	LOOP AT pt_targets INTO ls_target_temp WHERE case_number = ls_target-case_number.	000522
LZCCASE_CLEAR_FGF01	INCL		000523
LZCCASE_CLEAR_FGF01	INCL	READ TABLE it_target INTO ls_target_created	000524
LZCCASE_CLEAR_FGF01	INCL	WITH KEY object_guid = ls_target_temp-object_guid.	000525
LZCCASE_CLEAR_FGF01	INCL		000526
LZCCASE_CLEAR_FGF01	INCL	IF sy-subrc NE 0. " Append the record in existing cleansing case	000527
LZCCASE_CLEAR_FGF01	INCL		000528
LZCCASE_CLEAR_FGF01	INCL	* Create new GUID for that record	000529
LZCCASE_CLEAR_FGF01	INCL	CALL FUNCTION 'GUID_CREATE'	000530
LZCCASE_CLEAR_FGF01	INCL	IMPORTING	000531
LZCCASE_CLEAR_FGF01	INCL	ev_guid_16 = ls_target_created-guid.	000532
LZCCASE_CLEAR_FGF01	INCL		000533
LZCCASE_CLEAR_FGF01	INCL	ls_target_created-object_guid = ls_target_temp-object_guid.	000534
LZCCASE_CLEAR_FGF01	INCL		000535
LZCCASE_CLEAR_FGF01	INCL	* Begin of TR#CDCK909697	000536
LZCCASE_CLEAR_FGF01	INCL	ls_target_created-object_appl_key = ls_target_temp-object_appl_key.	000537
LZCCASE_CLEAR_FGF01	INCL	* End of TR#CDCK909697	000538
LZCCASE_CLEAR_FGF01	INCL		000539
LZCCASE_CLEAR_FGF01	INCL	IF ls_target_created-is_source EQ lc_t.	000540
LZCRM_BUSPROCESSND_BAPIF44	INCL	form get_billplan_bapi	000007
LZCRM_BUSPROCESSND_BAPIF44	INCL	tables et_billplan_b structure bapibus20001_billplan_dis	000008
LZCRM_BUSPROCESSND_BAPIF44	INCL	et_billplan_date_b structure bapibus20001_billplan_date_dis	000009
LZCRM_BUSPROCESSND_BAPIF44	INCL	ct_return structure bapiret2	000010
LZCRM_BUSPROCESSND_BAPIF44	INCL	using it_billplan type crmt_billplan_wrkt.	000011
LZCRM_BUSPROCESSND_BAPIF44	INCL		000012
LZCRM_BUSPROCESSND_BAPIF44	INCL		000013
LZCRM_BUSPROCESSND_BAPIF44	INCL	data: ls_billplan_b like line of et_billplan_b,	000014
LZCRM_BUSPROCESSND_BAPIF44	INCL	ls_billplan_date_b like line of et_billplan_date_b,	000015
LZCRM_BUSPROCESSND_BAPIF44	INCL	ls_billplan_wrk type crmt_billplan_wrk,	000016
LZCRM_BUSPROCESSND_BAPIF44	INCL	ls_billplan_dates type CRMT_BILLPLAN_D_WRK.	000017
LZCRM_BUSPROCESSND_BAPIF44	INCL		000018
LZCRM_BUSPROCESSND_BAPIF44	INCL		000019
LZCRM_BUSPROCESSND_BAPIF44	INCL	loop at it_billplan into ls_billplan_wrk.	000020
LZCRM_BUSPROCESSND_BAPIF44	INCL		000021
LZCRM_BUSPROCESSND_BAPIF44	INCL	clear ls_billplan_b.	000022
LZCRM_BUSPROCESSND_BAPIF44	INCL	move-corresponding ls_billplan_wrk to ls_billplan_b.	000023
LZCRM_BUSPROCESSND_BAPIF44	INCL		000024
LZCRM_BUSPROCESSND_BAPIF44	INCL	append ls_billplan_b to et_billplan_b.	000025
LZCRM_BUSPROCESSND_BAPIF44	INCL	* billplan_dates	000026
LZCRM_BUSPROCESSND_BAPIF44	INCL	loop at ls_billplan_wrk-billplan_dates into ls_billplan_dates.	000027
LZC_CLOSE_CASEF03	INCL	*& Form get_bps_for_all_zrcc	000005
LZC_CLOSE_CASEF03	INCL	*&---------------------------------------------------------------------*	000006
LZC_CLOSE_CASEF03	INCL	* text	000007
LZC_CLOSE_CASEF03	INCL	*----------------------------------------------------------------------*	000008
LZC_CLOSE_CASEF03	INCL	* -->P_IT_ORDER text	000009
LZC_CLOSE_CASEF03	INCL	*----------------------------------------------------------------------*	000010
LZC_CLOSE_CASEF03	INCL	FORM get_bps_for_all_zrcc TABLES p_it_order STRUCTURE	000011
LZC_CLOSE_CASEF03	INCL	crmt_7100_service_ui	000012
LZC_CLOSE_CASEF03	INCL	p_it_partner.	000013
LZC_CLOSE_CASEF03	INCL		000014
LZC_CLOSE_CASEF03	INCL	DATA : it_partner TYPE TABLE OF bapibus20001_partner_dis,	000015
LZC_CLOSE_CASEF03	INCL	lf_partner TYPE bapibus20001_partner_dis,	000016
LZC_CLOSE_CASEF03	INCL	lf_partner1 TYPE bapibus20001_partner_dis,	000017
LZC_CLOSE_CASEF03	INCL	lit_guid TYPE TABLE OF bapibus20001_guid_dis,	000018
LZC_CLOSE_CASEF03	INCL	lf_guid TYPE bapibus20001_guid_dis,	000019
LZC_CLOSE_CASEF03	INCL	guid_16 TYPE crmt_object_guid,	000020
LZC_CLOSE_CASEF03	INCL	l_partner TYPE bu_partner.	000021
LZC_CLOSE_CASEF03	INCL		000022
LZC_CLOSE_CASEF03	INCL	LOOP AT p_it_order.	000023
LZC_CLOSE_CASEF03	INCL	guid_16 = p_it_order-guid.	000024
LZC_CLOSE_CASEF03	INCL	APPEND guid_16 TO lit_guid.	000025
